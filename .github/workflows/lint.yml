name: Lint

on:
  push:
    branches: [ main, develop, feat/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  black:
    name: Check Black Formatting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install Black
      run: |
        python -m pip install --upgrade pip
        pip install black==24.10.0
    
    - name: Run Black
      run: |
        black --check --diff --color .
    
    - name: Comment on PR if formatting issues found
      if: failure() && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '❌ **Black formatting check failed!**\n\nPlease run `black .` or `make format` to fix formatting issues.'
          })

  isort:
    name: Check Import Sorting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install isort
      run: |
        python -m pip install --upgrade pip
        pip install isort==5.13.2
    
    - name: Run isort
      run: |
        isort --check-only --diff --color .
    
    - name: Comment on PR if import sorting issues found
      if: failure() && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '❌ **isort check failed!**\n\nPlease run `isort .` or `make format` to fix import sorting issues.'
          })

  pylint:
    name: Pylint Analysis (Optional)
    runs-on: ubuntu-latest
    continue-on-error: true  # Don't fail CI, just warn
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pylint==3.0.3
    
    - name: Run Pylint
      run: |
        pylint --rcfile=.pylintrc common/ manager/ downloader/ translator/ || true
      continue-on-error: true
    
    - name: Upload Pylint report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: pylint-report
        path: pylint-report.txt
        retention-days: 7

